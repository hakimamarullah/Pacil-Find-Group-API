#image: gradle:7.4-jdk11
#
#before_script:
#  - export GRADLE_USER_HOME=`pwd`/.gradle
#
#cache:
#  paths:
#    - .gradle/wrapper
#    - .gradle/caches
#
#stages:
#  - build
#  - test
#  - analysis
#  - deploy
#
#build:
#  stage: build
#  script:
#    - gradle assemble
#  artifacts:
#    paths:
#      - build/libs/*.jar
#    expire_in: 1 day
#
#test:
#  stage: test
#  coverage: '/Total.*?([0-9]{1,3})%/'
#  script:
#    - export SPRING_PROFILES_ACTIVE=local
#    - gradle check --stacktrace
#    - cat build/reports/jacoco/test/html/index.html | grep -o '<tfoot>.*</tfoot>'
#  artifacts:
#    paths:
#      - build/reports/jacoco/*
#    expire_in: 1 day
#
#
#sonarqube-check:
#  stage: analysis
#  variables:
#    SONAR_USER_HOME: $CI_PROJECT_DIR/.sonar
#    GIT_DEPTH: 0
#  script:
#    - gradle sonarqube -Dsonar.qualitygate.wait=true -Dsonar.projectKey=$PROJECT_KEY -Dsonar.host.url=https://sonarqube.cs.ui.ac.id -Dsonar.login=$SONAR_TOKEN
#  allow_failure: true
#  only:
#    - dev
#    - master
#
#production:
#  rules:
#    - if: '$CI_COMMIT_REF_NAME == "master"'
#  image: ruby:2.7
#  stage: deploy
#  before_script:
#    - gem install dpl
#    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
#  script:
#    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
#    - heroku run --app $HEROKU_APP_NAME migrate
#  environment:
#    name: production
#    url: https://$HEROKU_APP_NAME.herokuapp.com
#
#staging:
#  rules:
#    - if: '$CI_COMMIT_REF_NAME == "dev"'
#  image: ruby:2.7
#  stage: deploy
#  before_script:
#    - gem install dpl
#    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
#  script:
#    - dpl --provider=heroku --app=$HEROKU_APP_NAME_DEV --api-key=$HEROKU_API_KEY_DEV
#    - heroku run --app $HEROKU_APP_NAME_DEV migrate
#  environment:
#    name: development
#    url: https://$HEROKU_APP_NAME_DEV.herokuapp.com
